-- Unload all loaded vim modules to prevent persistent state across restarts
for k, _ in pairs(package.loaded) do
    if k:sub(1, 2) == "fp" then
        print(package.loaded[k], "unloaded")
        package.loaded[k] = nil
    end
end

local move = require("fp/move")
local inventory = require("fp/inventory")
local items = require("fp/items")
local builder = require("fp/builder")

local function ender()

    move.turnRight()
    move.forward()
    inventory.take(items.OBSIDIAN, 26)
    move.up()
    inventory.take(items.REDSTONE_BLOCK, 1)
    move.up()
    inventory.take(items.REDSTONE, 1)
    move.down(2)
    move.turnLeft()
    move.back(3)

    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.turnRight()
    move.back()
    move.turnRight()
    move.back(2)
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.turnLeft()
    move.back()
    move.turnLeft()
    move.back(2)
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)

    move.up()
    move.turnAround()
    move.back(2)

    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.turnRight()
    move.back()
    move.turnRight()
    move.back(2)
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.REDSTONE_BLOCK)
    move.back()
    builder.place(items.OBSIDIAN)
    move.turnLeft()
    move.back()
    move.turnLeft()
    move.back(2)
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)

    move.up()
    move.turnAround()
    move.back(2)

    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.turnRight()
    move.back()
    move.turnRight()
    move.back(2)
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.turnLeft()
    move.back()
    move.turnLeft()
    move.back(2)
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)
    move.back()
    builder.place(items.OBSIDIAN)

    -- Drop catalyst
    move.down(2)
    move.back()
    builder.dropCatalyzer(items.REDSTONE)

    move.forward(6)
    move.turnRight()
    move.forward(1)
    move.turnLeft()
end

local function run()
    for _ = 2, times do
        ender()
    end
end

run()
